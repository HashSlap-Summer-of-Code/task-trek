#!/bin/bash

# TaskTrek - Recurring Task Management System
# Main executable script

set -e

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source the library
source "$SCRIPT_DIR/tasktrek-lib.sh"

# Initialize data directory and file
init_tasktrek() {
    mkdir -p "$SCRIPT_DIR/data"
    if [[ ! -f "$TASKS_FILE" ]]; then
        echo '{"tasks": [], "next_id": 1}' > "$TASKS_FILE"
    fi
}

# Usage function
usage() {
    cat << EOF
TaskTrek - Recurring Task Management System

Usage: $0 <command> [options]

Commands:
    add <title> [description] [--recur <frequency>]
        Add a new task. Frequency: daily, weekly, monthly
    
    list [--all]
        List pending tasks (--all shows completed too)
    
    complete <id>
        Mark task as complete (regenerates if recurring)
    
    delete <id>
        Delete a task permanently
    
    help
        Show this help message

Examples:
    $0 add "Daily standup" "Team meeting" --recur daily
    $0 add "Weekly review" --recur weekly
    $0 list
    $0 complete 1
    $0 delete 2

EOF
}

# Parse command line arguments
case "${1:-}" in
    "add")
        shift
        title="$1"
        description="${2:-}"
        recur_freq=""
        
        # Parse remaining arguments for --recur flag
        shift
        if [[ "${1:-}" != "" ]]; then
            if [[ "$1" != "--recur" ]]; then
                description="$1"
                shift
            fi
        fi
        
        if [[ "${1:-}" == "--recur" ]]; then
            recur_freq="${2:-}"
            if [[ ! "$recur_freq" =~ ^(daily|weekly|monthly)$ ]]; then
                echo "Error: Invalid recurrence frequency. Use: daily, weekly, monthly"
                exit 1
            fi
        fi
        
        if [[ -z "$title" ]]; then
            echo "Error: Task title is required"
            usage
            exit 1
        fi
        
        add_task "$title" "$description" "$recur_freq"
        ;;
    
    "list")
        regenerate_recurring_tasks
        show_all="false"
        if [[ "${2:-}" == "--all" ]]; then
            show_all="true"
        fi
        list_tasks "$show_all"
        ;;
    
    "complete")
        task_id="${2:-}"
        if [[ -z "$task_id" ]]; then
            echo "Error: Task ID is required"
            usage
            exit 1
        fi
        complete_task "$task_id"
        ;;
    
    "delete")
        task_id="${2:-}"
        if [[ -z "$task_id" ]]; then
            echo "Error: Task ID is required"
            usage
            exit 1
        fi
        delete_task "$task_id"
        ;;
    
    "help"|"--help"|"-h")
        usage
        ;;
    
    *)
        echo "Error: Unknown command '${1:-}'"
        usage
        exit 1
        ;;
esac